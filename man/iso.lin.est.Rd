% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/iso.lin.est.R
\name{iso.lin.est}
\alias{iso.lin.est}
\title{Nonparametric LSE for L-Lipschitz function}
\usage{
iso.lin.est(x, y, L = NULL, L0 = 100, run.cross.fit = TRUE, rep = 1, ...)
}
\arguments{
\item{x}{\code{n x 1} numeric vector of the observed covariate vector.}

\item{y}{\code{n x 1} numeric vector of the observed response vector.}

\item{L}{A scalar for the linear parameter. If not specified, L is
data-adaptively selected via numerical optimization.}

\item{L0}{The upper bound of the interval of L parameters to search over
the interval is in the form of \link{-L0 x log10(n), L0 x log10(n)}.
In practice, this should be a large enough constant so the set contains
the true Lipschitz parameter L.}

\item{run.cross.fit}{A Boolean parameter for selecting sample-splitting or
cross-fitting If TRUE, it performs cross-fitting Default is TRUE.}

\item{rep}{When rep > 1, the sample-splitting is performed multiple times.
This procedure can reduce the randomness due to the index of sample
splitting.}

\item{...}{Additional control parameters}
}
\value{
An object with S3 class \code{iso.lin.est}.
}
\description{
Nonparametric LSE for L-Lipschitz function
}
\examples{
n <- 100; x <- runif(n, -1, 1); y <- sin(x*4) + rnorm(n, 0, 0.1)
res.est <- iso.lin.est(x, y)
y.pred <- predict(res.est) # fitted value
y.pred <- predict(res.est, newdata=runif(n, -1, 1)) # predict new data
}
